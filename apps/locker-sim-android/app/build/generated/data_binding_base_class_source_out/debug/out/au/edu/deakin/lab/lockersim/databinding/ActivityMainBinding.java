// Generated by view binder compiler. Do not edit!
package au.edu.deakin.lab.lockersim.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import au.edu.deakin.lab.lockersim.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnBeacon;

  @NonNull
  public final Button btnDecrypt;

  @NonNull
  public final Button btnDecryptDcim;

  @NonNull
  public final Button btnEncrypt;

  @NonNull
  public final Button btnEncryptDcim;

  @NonNull
  public final Button btnImport;

  @NonNull
  public final Button btnList;

  @NonNull
  public final Button btnPickDcim;

  @NonNull
  public final Button btnSeed;

  @NonNull
  public final ImageView catImage;

  @NonNull
  public final TextView headerRyan;

  @NonNull
  public final TextView output;

  @NonNull
  public final TextView status;

  private ActivityMainBinding(@NonNull NestedScrollView rootView, @NonNull Button btnBeacon,
      @NonNull Button btnDecrypt, @NonNull Button btnDecryptDcim, @NonNull Button btnEncrypt,
      @NonNull Button btnEncryptDcim, @NonNull Button btnImport, @NonNull Button btnList,
      @NonNull Button btnPickDcim, @NonNull Button btnSeed, @NonNull ImageView catImage,
      @NonNull TextView headerRyan, @NonNull TextView output, @NonNull TextView status) {
    this.rootView = rootView;
    this.btnBeacon = btnBeacon;
    this.btnDecrypt = btnDecrypt;
    this.btnDecryptDcim = btnDecryptDcim;
    this.btnEncrypt = btnEncrypt;
    this.btnEncryptDcim = btnEncryptDcim;
    this.btnImport = btnImport;
    this.btnList = btnList;
    this.btnPickDcim = btnPickDcim;
    this.btnSeed = btnSeed;
    this.catImage = catImage;
    this.headerRyan = headerRyan;
    this.output = output;
    this.status = status;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBeacon;
      Button btnBeacon = ViewBindings.findChildViewById(rootView, id);
      if (btnBeacon == null) {
        break missingId;
      }

      id = R.id.btnDecrypt;
      Button btnDecrypt = ViewBindings.findChildViewById(rootView, id);
      if (btnDecrypt == null) {
        break missingId;
      }

      id = R.id.btnDecryptDcim;
      Button btnDecryptDcim = ViewBindings.findChildViewById(rootView, id);
      if (btnDecryptDcim == null) {
        break missingId;
      }

      id = R.id.btnEncrypt;
      Button btnEncrypt = ViewBindings.findChildViewById(rootView, id);
      if (btnEncrypt == null) {
        break missingId;
      }

      id = R.id.btnEncryptDcim;
      Button btnEncryptDcim = ViewBindings.findChildViewById(rootView, id);
      if (btnEncryptDcim == null) {
        break missingId;
      }

      id = R.id.btnImport;
      Button btnImport = ViewBindings.findChildViewById(rootView, id);
      if (btnImport == null) {
        break missingId;
      }

      id = R.id.btnList;
      Button btnList = ViewBindings.findChildViewById(rootView, id);
      if (btnList == null) {
        break missingId;
      }

      id = R.id.btnPickDcim;
      Button btnPickDcim = ViewBindings.findChildViewById(rootView, id);
      if (btnPickDcim == null) {
        break missingId;
      }

      id = R.id.btnSeed;
      Button btnSeed = ViewBindings.findChildViewById(rootView, id);
      if (btnSeed == null) {
        break missingId;
      }

      id = R.id.catImage;
      ImageView catImage = ViewBindings.findChildViewById(rootView, id);
      if (catImage == null) {
        break missingId;
      }

      id = R.id.headerRyan;
      TextView headerRyan = ViewBindings.findChildViewById(rootView, id);
      if (headerRyan == null) {
        break missingId;
      }

      id = R.id.output;
      TextView output = ViewBindings.findChildViewById(rootView, id);
      if (output == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      return new ActivityMainBinding((NestedScrollView) rootView, btnBeacon, btnDecrypt,
          btnDecryptDcim, btnEncrypt, btnEncryptDcim, btnImport, btnList, btnPickDcim, btnSeed,
          catImage, headerRyan, output, status);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
